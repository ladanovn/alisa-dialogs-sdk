import Command from './command';
import { ICommands } from './types/commands';
import { ICommand } from './types/command';
import { IContext } from './types/context';
export default class Commands implements ICommands {
    commands: ICommand[];
    fuseOptions: {};
    constructor(config?: any);
    get(): ICommand[];
    readonly _matchers: ICommand[];
    readonly _strings: ICommand[];
    readonly _figures: ICommand[];
    readonly _regexps: ICommand[];
    search(ctx: IContext): Promise<ICommand[]>;
    readonly length: number;
    add(name: any, callback: any): void;
    flush(): void;
    private _searchMatchers;
    private _searchStrings;
    private _searchFigures;
    private _searchRegexps;
}
export { Command };
