"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
const node_fetch_1 = __importDefault(require("node-fetch"));
function getHeaders({ oAuthToken }) {
    return {
        Authorization: `OAuth ${oAuthToken}`,
        'Content-type': 'application/json',
    };
}
exports.getHeaders = getHeaders;
class ImagesApi {
    constructor({ oAuthToken, skillId }) {
        this.oAuthToken = oAuthToken;
        this.skillId = skillId;
    }
    async uploadImage(imageUrl) {
        try {
            this.checkProps();
            const res = await node_fetch_1.default(`${constants_1.ALICE_API_URL}/${this.skillId}/images`, {
                method: 'POST',
                headers: getHeaders({ oAuthToken: this.oAuthToken }),
                body: JSON.stringify({
                    url: imageUrl,
                }),
            });
            const json = await res.json();
            return json;
        }
        catch (error) {
            return error;
        }
    }
    async getImages() {
        this.checkProps();
        try {
            const res = await node_fetch_1.default(`${constants_1.ALICE_API_URL}/${this.skillId}/images`, {
                method: 'GET',
                headers: getHeaders({ oAuthToken: this.oAuthToken }),
            });
            const json = await res.json();
            return json;
        }
        catch (error) {
            return error;
        }
    }
    checkProps() {
        if (!this.skillId) {
            throw new Error('Please, provide {skillId} to alice constructor');
        }
        if (!this.oAuthToken) {
            throw new Error('Please, provide {oAuthToken} to alice constructor');
        }
    }
}
exports.default = ImagesApi;
