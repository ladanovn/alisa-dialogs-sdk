"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const session_1 = __importDefault(require("./session"));
exports.Session = session_1.default;
class Sessions {
    constructor() {
        this.sessions = {};
    }
    add(session) {
        const { sessionId } = session;
        this.sessions[sessionId] = session;
        return this.sessions[sessionId];
    }
    find(session) {
        if (!session) {
            throw new Error('No session provided');
        }
        return Object.values(this.sessions).find(sessionCandidate => session === sessionCandidate);
    }
    findById(sessionId) {
        if (this.sessions[sessionId]) {
            return this.sessions[sessionId];
        }
        return null;
    }
    findOrCreate(sessionId) {
        if (this.findById(sessionId)) {
            return this.findById(sessionId);
        }
        const session = new session_1.default(sessionId);
        this.add(session);
        return session;
    }
    get length() {
        return Object.keys(this.sessions).length;
    }
    removeById(sessionId) {
        if (sessionId) {
            delete this.sessions[sessionId];
            return true;
        }
        return false;
    }
    /**
     * Remove all sessions
     */
    flush() {
        this.sessions = {};
    }
}
exports.Sessions = Sessions;
exports.default = Sessions;
